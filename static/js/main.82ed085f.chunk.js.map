{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/Errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","Errorboundary","state","hasError","error","info","this","setState","Component","App","onSearchEvent","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8OAiBeA,EAfF,SAACC,GAEV,OAEI,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,GAAjC,YAAgDC,IAAI,WAC5D,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCkBXC,EAxBC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACf,OACI,8BAESA,EAAOC,KAAI,SAACC,EAAMC,GACf,OAEI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdE,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCFdC,EARA,SAACZ,GACZ,OACI,qBAAKa,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKhB,EAAMiB,YCUJC,EAbE,SAAC,GAAiC,EAAhCC,YAAiC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKnB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBoB,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCkBPI,G,wDAvBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAO,CACRC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAGG,KAAKJ,MAAMC,SAEC,gFAGJG,KAAK7B,MAAMiB,a,GAnBFc,cCuDbC,E,kDAhDX,aAAe,IAAD,8BACV,gBAeJC,cAAgB,SAACC,GACb,EAAKJ,SAAS,CAACX,YAAae,EAAMC,OAAOC,SAfzC,EAAKX,MACL,CACIjB,OAAQ,GACRW,YAAc,IALR,E,gEASM,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAASiC,S,+BAU1C,IAAD,EACmCZ,KAAKJ,MAA5BjB,EADZ,EACYA,OAAQW,EADpB,EACoBA,YACVuB,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS3B,EAAY0B,kBAEzD,OAAQrC,EAAOuC,OAGP,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAE,EAAF,CAAYmB,aAAeS,KAAKI,gBAChC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,WARN,oBAAIzC,UAAU,KAAd,yB,GA9Bb8B,aCKJiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAIhDX,M","file":"static/js/main.82ed085f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) =>\r\n{\r\n    return(\r\n        \r\n        <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5\">\r\n            <img src={ `https://robohash.org/${props.id}?200x200` } alt=\"avatar\" />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n    \r\n};\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList =({ robots }) => {\r\n    return(\r\n        <div>\r\n            {\r\n                 robots.map((user, i) => {\r\n                    return (\r\n                    \r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                     />\r\n                  \r\n                    );\r\n                })\r\n            }\r\n       \r\n        </div>\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield , searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search friends\"\r\n            onChange={searchChange}\r\n        />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React , {Component} from 'react';\r\n\r\nclass Errorboundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n            {\r\n                return <h1>Our knights are working on this.........Sorry.</h1>\r\n            }\r\n        else{\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default Errorboundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './app.css';\r\nimport Errorboundary from '../components/Errorboundary'\r\n\r\nclass App  extends Component{\r\n    //adding state \r\n    constructor() {\r\n        super()\r\n        this.state=\r\n        {\r\n            robots: [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){     //since this is not a javascript file, we are not using the => function\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())  \r\n\r\n        .then(users => this.setState({robots : users}))      // we are collecting the robots from the javascript file.\r\n    }\r\n\r\n    onSearchEvent = (event) =>{\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        const { robots, searchfield} = this.state; //destructring the code to make it a lot clearner\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ? <h1 className=\"tc\">Loading</h1> :\r\n        \r\n            \r\n                <div className=\"tc\">\r\n                    <h1 className='f1' >RoboFriends</h1>\r\n                    < SearchBox searchChange= {this.onSearchEvent} />\r\n                    <Scroll>\r\n                    <Errorboundary>\r\n                    <CardList robots={filteredRobots} />\r\n                    </Errorboundary>\r\n                    </Scroll>\r\n                </div>\r\n                \r\n            \r\n        }\r\n       \r\n        \r\n    };\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}